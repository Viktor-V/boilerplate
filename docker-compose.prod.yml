version: '3.7'

services:
    web:
        image: boilerplate:latest
        container_name: web
        build:
            context: .
            target: prod
            args:
                - ENVIRONMENT=prod
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.web.entryPoints=websecure"
            - "traefik.http.routers.web.rule=Host(`${DOMAIN}`)"
            - "traefik.http.routers.web.middlewares=basic-auth@file" # dont forget remove this after app will be ready for prod
        environment:
            - CORE_MAILER_DSN=${CORE_MAILER_DSN}
            - CORE_MAILER_EMAIL=${CORE_MAILER_EMAIL}
            - CORE_TRANSPORT_DSN=${CORE_TRANSPORT_DSN}
            - CORE_DB_DSN=${CORE_DB_DSN}
            - CORE_REDIS_DSN=${CORE_REDIS_DSN}
            - ANTI_SPAM_HIDDEN_CAPTCHA_PUBLIC_KEY=${ANTI_SPAM_HIDDEN_CAPTCHA_PUBLIC_KEY}
            - ANTI_SPAM_HIDDEN_CAPTCHA_PRIVATE_KEY=${ANTI_SPAM_HIDDEN_CAPTCHA_PRIVATE_KEY}
            - CONTACT_SUPPORT_EMAIL=${CONTACT_SUPPORT_EMAIL}
            - CONTACT_SUPPORT_PHONE=${CONTACT_SUPPORT_PHONE}
        networks:
            - proxy
        depends_on:
            - rabbitmq
            - redis
            - mariadb

    worker:
        image: boilerplate:latest
        container_name: worker
        restart: always
        entrypoint: php bin/console messenger:consume --limit=10 -vv
        environment:
            - CORE_MAILER_DSN=${CORE_MAILER_DSN}
            - CORE_MAILER_EMAIL=${CORE_MAILER_EMAIL}
            - CORE_TRANSPORT_DSN=${CORE_TRANSPORT_DSN}
            - CORE_DB_DSN=${CORE_DB_DSN}
            - CORE_REDIS_DSN=${CORE_REDIS_DSN}
            - ANTI_SPAM_HIDDEN_CAPTCHA_PUBLIC_KEY=${ANTI_SPAM_HIDDEN_CAPTCHA_PUBLIC_KEY}
            - ANTI_SPAM_HIDDEN_CAPTCHA_PRIVATE_KEY=${ANTI_SPAM_HIDDEN_CAPTCHA_PRIVATE_KEY}
            - CONTACT_SUPPORT_EMAIL=${CONTACT_SUPPORT_EMAIL}
            - CONTACT_SUPPORT_PHONE=${CONTACT_SUPPORT_PHONE}
        networks:
            - proxy
        depends_on:
            - rabbitmq
            - web

    rabbitmq:
        image: rabbitmq:3.8.17-management
        container_name: rabbitmq
        volumes:
            - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
            - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
        environment:
            - RABBITMQ_DEFAULT_USER=${TRANSPORT_USERNAME}
            - RABBITMQ_DEFAULT_PASS=${TRANSPORT_PASSWORD}
        networks:
            - proxy
        ports:
            - '127.0.0.1:5672:5672'

    mariadb:
        image: mariadb:10.4.18
        container_name: mariadb
        restart: always
        volumes:
            - ./.docker/mysql/data/:/var/lib/mysql
        environment:
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_DATABASE=${DB_NAME}
            - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
        command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        networks:
            - proxy

    redis:
        image: redis:6.2.3-alpine
        container_name: redis
        restart: always
        volumes:
            - ./.docker/redis/data/:/data
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
        networks:
            - proxy
        ports:
            - '127.0.0.1:6379:6379'

networks:
    proxy:
        external: true
        name: proxy
