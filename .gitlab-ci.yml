image: php:8.0.3-cli-alpine3.12

stages:
    - build
    - test
    - deploy

variables:
    DOCKER_DRIVER: overlay2

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - .env
        - composer.phar
        - vendor/
        - var/cache
        - .phpunit.result.cache

build-php:
    stage: build
    script:
        - curl --show-error --silent "https://getcomposer.org/installer" | php
        - php composer.phar install --ignore-platform-reqs --no-ansi --no-interaction --no-scripts
        - echo "APP_SECRET=$(tr -dc A-Za-z0-9 < /dev/urandom | head -c 32)" >> .env
        - php composer.phar dump-autoload --optimize --classmap-authoritative
        - php composer.phar check-platform-reqs

codestyle:
    stage: test
    script:
        - php -d memory_limit=-1 ./bin/console cache:warmup --env=dev
        - php -d memory_limit=-1 ./vendor/bin/phpcs --standard=phpcs.xml
        - php -d memory_limit=-1 ./vendor/bin/phpcs --standard=phpcs.xml
        - php -d memory_limit=-1 ./vendor/bin/phpstan analyse -c phpstan.neon --no-progress --quiet
        - php -d memory_limit=-1 ./bin/console cache:warmup --env=test
        - php -d memory_limit=-1 ./vendor/bin/phpstan analyse -c phpstan-tests.neon --no-progress --quiet

test:
    stage: test
    script:
        - php -d memory_limit=-1 ./bin/console cache:warmup --env=test
        - php -d memory_limit=-1 ./vendor/bin/paratest -p10

deploy:
    image: docker/compose:1.29.2
    stage: deploy
    script:
        - docker-compose -f docker-compose.prod.yml up -d --build
    only:
        - master
    when: manual

