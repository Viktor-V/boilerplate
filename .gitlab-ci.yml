image: php:8.0.3-cli-alpine3.12

stages:
    - build
    - test
    - deploy

variables:
    DOCKER_DRIVER: overlay2

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - .env
        - composer.phar
        - vendor/
        - bin/.phpunit
        - var/cache
        - public/build

before_script:
    - curl --show-error --silent "https://getcomposer.org/installer" | php
    - php composer.phar install --ignore-platform-reqs --no-ansi --no-interaction --no-scripts
    - echo "APP_SECRET=$(tr -dc A-Za-z0-9 < /dev/urandom | head -c 32)" >> .env

build-php:
    stage: build
    script:
        - php composer.phar dump-autoload --optimize --classmap-authoritative
        - php composer.phar check-platform-reqs

build-js:
    image: node:15.11.0-alpine3.13
    before_script: []
    stage: build
    script:
        - yarn install
        - yarn build

codestyle:
    stage: test
    script:
        - php -d memory_limit=-1 ./bin/console cache:warmup --env=dev
        - php -d memory_limit=-1 ./vendor/bin/phpcs --standard=phpcs.xml
        - php -d memory_limit=-1 ./vendor/bin/phpcpd --fuzzy src/ tests/ config/
        - php -d memory_limit=-1 ./vendor/bin/phpstan analyse -c phpstan.neon --no-progress

test:
    stage: test
    script:
        - php -d memory_limit=-1 ./bin/console cache:warmup --env=test
        - php -d memory_limit=-1 ./vendor/bin/phpstan analyse -c phpstan-tests.neon --no-progress
        - php -d memory_limit=-1 ./bin/phpunit

deploy:
    image: docker/compose
    before_script: []
    services:
        - docker:dind
    stage: deploy
    script:
        - docker-compose -f docker-compose.prod.yml up -d --build
    only:
        - master
    when: manual

